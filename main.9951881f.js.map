{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tableRows","tBodies","rows","convertSalary","str","slice","split","join","tHead","onclick","ev","index","target","cellIndex","sort","row1","row2","cells","innerText","append"],"mappings":";AAAA,aAUA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAPA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAgBH,EAAAA,EAAMI,QAAQ,GAAGC,MAEjCC,EAAgB,SAACC,GACd,OAACA,EAAIC,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAGvCV,EAAMW,MAAMC,QAAU,SAACC,GAAO,IAAA,EAEtBC,EADSD,EAAGE,OACGC,UAEbF,OAAAA,GACD,KAAA,EACA,KAAA,EACHX,EAAUc,KAAK,SAACC,EAAMC,GACbD,OAAAA,EAAKE,MAAMN,GAAOO,UAAYF,EAAKC,MAAMN,GAAOO,UACnD,GAAK,IAEX,MAEG,KAAA,EACHlB,EAAUc,KAAK,SAACC,EAAMC,GACbD,OAAAA,EAAKE,MAAMN,GAAOO,UAAYF,EAAKC,MAAMN,GAAOO,YAEzD,MAEG,KAAA,EACHlB,EAAUc,KAAK,SAACC,EAAMC,GACbb,OAAAA,EAAcY,EAAKE,MAAMN,GAAOO,WACrCf,EAAca,EAAKC,MAAMN,GAAOO,cAIxCrB,EAAAA,EAAMI,QAAQ,IAAGkB,OAAUnB,MAAAA,EAAAA,EAAAA","file":"main.9951881f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst table = document.querySelector('table');\nconst tableRows = [...table.tBodies[0].rows];\n\nconst convertSalary = (str) => {\n  return +str.slice(1).split(',').join('');\n};\n\ntable.tHead.onclick = (ev) => {\n  const target = ev.target;\n  const index = target.cellIndex;\n\n  switch (index) {\n    case 0:\n    case 1:\n      tableRows.sort((row1, row2) => {\n        return row1.cells[index].innerText > row2.cells[index].innerText\n          ? 1 : -1;\n      });\n      break;\n\n    case 2:\n      tableRows.sort((row1, row2) => {\n        return row1.cells[index].innerText - row2.cells[index].innerText;\n      });\n      break;\n\n    case 3:\n      tableRows.sort((row1, row2) => {\n        return convertSalary(row1.cells[index].innerText)\n        - convertSalary(row2.cells[index].innerText);\n      });\n      break;\n  };\n  table.tBodies[0].append(...tableRows);\n};\n"]}